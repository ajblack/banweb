<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head>  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />  <title>Banweb++</title>  <link rel="stylesheet" type="text/css" href="../style.css" /></head><?php //good one $dbc = mysql_connect("localhost", "efletch", "s3cr3t201e")    or die('Error connecting to MySQL server.');     mysql_select_db("efletch", $dbc);	if(isset($_POST['submit3'])) { //CHECKS IF SUBMIT BUTTON HAS ALREADY BEEN CLICKED. NECESSARY OR WILL JUST LOAD CODE AND BREAK PAGE.		$f_name = $_POST['f_name'];		$l_name = $_POST['l_name'];		if(strlen($f_name)<1){			die("you did not enter a first name, go back and fix this");		}		if(strlen($l_name)<1){			die("you did not enter a last name, go back and fix this");		}		$address = $_POST['address'];//no type checking required		if(strlen($address)<1){			die("you did not enter an address, go back and fix this");		}		$SSN = $_POST['ssn'];		if((strlen($SSN) != 9) ||  ((string)(int)($SSN) != $SSN)){//type checking to make sure ssn is 9 characters long and is all ints			die("you have entered an invalid SSN");		}			$phone = $_POST['phone'];		//the following type checking algorithm is used throughout application.  what is does is casts the string directly into a double		//and then back into a string in order to compare to the original string.  Luckily, PHP treats numerical strings as the number value		//so we can use this effectively.  Also, $phone uses a double as a cast because the number is too large for and int		if(((string)(double)($phone) != $phone)){//type checking to make sure phone number is all ints...			die("you have entered an invalid phone number");		}		$email = $_POST['email'];		//type checking for email checks for the @ symbol as well, since all emails contain this		if((strlen($email)<1 )|| (strpos($email,'@')==false)){			die("you did not enter a valid email address, go back and fix it");		}		$date_of_birth = $_POST['dob'];		$month_of_birth = substr($date_of_birth,0,2);		$day_of_birth = substr($date_of_birth,2,2);		$year_of_birth = substr($date_of_birth,4,4);		$current_year = "2013"; //these are variables that I use to show modularity...the current year and month can be updated so that the system checks for invalid birthdays			if((strlen($date_of_birth) != 8) ||  ((string)(int)($date_of_birth) != $date_of_birth)){//type checking to make sure DOB is 6 characters long and is all ints			die("you have entered an invalid DOB because you do not have a full MMDDYYYY format and/or you did not put actual digits, please go back and fix this");		}				else if((int)($month_of_birth)>12 ){			die("you have entered an invalid birth month, please go back and fix this");		}		//check day of birth for months with 30 days		else if((int)($day_of_birth)>30 && ((int)($month_of_birth)==4 || (int)($month_of_birth)==6 ||(int)($month_of_birth)==9||(int)($month_of_birth)==11)){			die("your month of birth does not more than 30 days in it, fix your birthday");		}		//deals with february		else if(((int)($day_of_birth)>29 )&& ((int)($month_of_birth)==2)){			die("february doesn't have more than 29 days in it, fix your birthday");		}		else if(((int)($day_of_birth)>31) && ((int)($month_of_birth)==1 || (int)($month_of_birth)==3 || (int)($month_of_birth)==5 || (int)($month_of_birth)==7 || (int)($month_of_birth)==8 || (int)($month_of_birth)==10 || (int)($month_of_birth)==12)) {			die("months dont have more than 31 days in them, fix it");		}		else if((int)($year_of_birth)>(int)($current_year)) {			die("you have entered an invalid  birth year, please go back and fix this");		} 		$race = $_POST['race'];//radio		$gender = $_POST['sex'];//radio		$degree_sought = $_POST['deg_sought'];//radio		//////////NEED TO DO CHECKING/ADDING FOR PRIOR BACHELORS AND MASTERS DEGREE INFO HERE!!!!!!////////////////////																	//check that years are 4 digits		$bach_year=$_POST['bach_year'];		if((strlen($bach_year) != 4) || ((int)($bach_year) >$current_year)){			die("you have an issue with bachelor degree year, go back and fix it");		}		$bach_gpa=$_POST['bach_gpa'];		if(strlen($bach_gpa) != 3 ){			die("you have an issue with bachelors GPA, go back and fix it");		}		$bach_school=$_POST['bach_school'];		if(strlen($bach_school)<1){			die("please go back and add a school for your bachelors degree");		}		$bach_major=$_POST['bach_major'];		if(strlen($bach_major)<1){			die("please go back and add a major for your bachelors degree");		}		$mast_year=$_POST['mast_year'];		if(strlen($mast_year)!=0 && strlen($mast_year) != 4 ){			die("you have an issue with masters degree year, go back and fix it");		}						$mast_gpa=$_POST['mast_gpa'];		if(strlen ($mast_gpa)!=0 && strlen($mast_gpa) != 3 ){			die("you have an issue with masters GPA, go back and fix it");		} 				$GRE_total = $_POST['gre_total'];		if((string)(int)($GRE_total) != $GRE_total){//type checking to make sure GRE total is all ints...theoretically the total GRE could be a composition so is not checked against individual scores			die("you have entered an invalid total GRE total, total GRE must be all digits and you have entered something with a non-digit");		}		$GRE_verbal = $_POST['gre_verb'];		if(((string)(int)($GRE_verbal) != $GRE_verbal) || ((int)($GRE_verbal)>170) || ((int)($GRE_verbal)<130)){//type checking to make sure GRE_verbal is 3 characters long and is all ints			die("you have entered an invalid verbal GRE, verbal GRE's range from 130-170");		}		$GRE_analytical = $_POST['gre_anal'];		if(((string)(int)($GRE_analytical) != $GRE_analytical) || ((int)($GRE_analytical)>6) || ((int)($GRE_analytical)<0)){//type checking to make sure GRE_anal is 3 characters long and is all ints			die("you have entered an invalid analytical GRE, analytical GRE's range from 0-6");		}		$GRE_quantitative = $_POST['gre_quant'];		if(((string)(int)($GRE_quantitative) != $GRE_quantitative) || ((int)($GRE_quantitative)>170) || ((int)($GRE_quantitative)<130)){//type checking to make sure GRE_quantitative is 3 characters long and is all ints			die("you have entered an invalid quantitative GRE, quantitative GRE's range from 0-6");		}						$sub1_score=$_POST['sub1_score'];				$sub2_sub=$_POST['sub2_sub'];		$sub2_score=$_POST['sub2_score'];				$sub3_sub=$_POST['sub3_sub'];		$sub3_score=$_POST['sub3_score'];							$work_experience = $_POST['experience'];//no type checking required...requires student to describe		$area_interest = $_POST['interest'];		$password = $_POST['password'];		if(strlen($password) <1){			die("you have not entered a desired password");		}        $rec_name = $_POST['writer'];        $rec_email = $_POST['email_r'];        if((strlen($rec_email))<1){        	die("you have not entered a recommender email");        }        $rec_title = $_POST['title'];        $rec_affil = $_POST['affil'];        //ssn, phone, dob, all GRE's        $date = date("m/d/Y");          		function generateRandomString($length = 3) { 			$characters = '0123456789';			$randomString = '';			for ($i = 0; $i < $length; $i++) {				$randomString .= $characters[rand(0, strlen($characters) - 1)];			}			return $randomString;		}                $count = 1;                do {            $aid = generateRandomString();            $sql_aid = "Select * FROM graduate_applicant WHERE aid='$aid";            $query_aid = mysql_query($sql_aid);            $aid_existing = mysql_num_rows($query_aid);          if ($aid_existing > 0)            {                $count = $count + 1;            }          else {              $count = 0;          }        }        while ($count > 0);	 	//below are the necessary insert sql queries.  First query inserts data necessary to contain in the application        //notice that all queries include the password since this will be used from now on to 		$query = "INSERT INTO application VALUES ('$area_interest','$date','$degree_sought','$bach_year','$bach_gpa','$bach_school','$bach_major','$mast_year','$mast_gpa','$mast_school','$mast_major','$GRE_total','$GRE_verbal','$GRE_analytical','$GRE_quantitative','$sub1_sub','$sub1_score','$sub2_sub','$sub2_score','$sub3_sub','$sub3_score','$work_experience','$sem_admit','$year_admit','0','$aid')";  		//query2 inserts personal info provided into the grad applicant database		$query2 = "INSERT INTO graduate_applicant VALUES ('$f_name','l_name','$SSN','$address','$phone','$email','$date_of_birth','$race','$gender','$password','$aid')";		//query3 inserts 0 and 0 into the documents page to start, this means that neither the recommendations or the transcript has been recieved		$query3 = "INSERT INTO documents VALUES ('0','0','$aid')";        //query4 adds the recommender's information into the database for the letter writer        $query4 = "INSERT INTO letter_writers VALUES ('$rec_name','$rec_email','$rec_title','$rec_affil',' ','$aid')";                $query5 = "INSERT INTO final_status (aid) VALUES ('$aid')";     		mysql_query($query) or die(mysql_error());		mysql_query($query2) or die(mysql_error());		mysql_query($query3) or die(mysql_error());        mysql_query($query4) or die(mysql_error());        mysql_query($query5) or die(mysql_error());		echo "Thank you for your submission";         echo "<BR />";        echo "your applicant ID is : $aid";	} 	else { ?>   <h2>Graduate Application</h2><form method="post" action="application.php">First Name (required): <input type="text" name="f_name"><br>Last Name (required): <input type="text" name="l_name"><br>Address: <input type="text" name="address"><br>SSN (no spaces): <input type="text" name="ssn"><br>Phone (no spaces): <input type="text" name="phone"><br>Email: <input type="text" name="email"><br>Date of Birth (MMDDYYYY no spaces): <input type="text" name="dob"><br>Race:<input type="radio" name="race" value="black">black <input type ="radio" name="race" value="white">white <input type="radio" name="race" value="other">other<br>Gender:<input type="radio" name="gender" value="male">male <input type ="radio" name="gender" value="female">female<input type="radio" name="gender" value="I dont want to talk about it">I dont want to talk about it<br>    <br>Degree Sought:<input type="radio" name="deg_sought" value="1">Masters <input type ="radio" name="deg_sought" value="2">Doctorate <br>Semester of Admission: <input type="radio" name="sem_admit"value="Fall">Fall <input type="radio" name="sem_admit" value="Spring">Spring<br>Year of Admission: <input type="radio" name="year_admit"value="2013">2013 <input type="radio" name="year_admit" value="2014">2014<br>Prior Bachelors Degree year of graduation (YYYY format): <input type="text"name="bach_year"><br>Prior Bachelors Degree overall GPA (in 4.0 format): <input type="text"name="bach_gpa"><br>Prior Bachelors Degree Univeristy: <input type="text"name="bach_school"><br>Prior Bachelors Degree Major: <input type="text" name="bach_major"><br><br> A Previous Masters Degree is Not Require (leave blank if thats the case) <br>Prior Masters Degree year of graduation: <input type="text"name="mast_year"><br>Prior Masters Degree overall GPA (in 4.0 format): <input type="text"name="mast_gpa"><br>Prior Masters Degree Univeristy: <input type="text"name="mast_school"><br>Prior Masters Degree Major <input type="text" name="mast_major"><br>GRE Total Score: <input type="text" name="gre_total"><br>GRE Verbal Score: <input type="text" name="gre_verb"><br>GRE Analytical Score: <input type="text" name="gre_anal"><br>GRE Quanitative Score: <input type="text" name="gre_quant"><br><br> The Following Subject Scores are Optional <br>GRE Subject Test 1 Subject: <input type="text" name="sub1_sub" ><br>GRE Subject Test 1 Score: <input type="text" name="sub1_score" ><br>GRE Subject Test 2 Subject: <input type="text" name="sub2_sub" ><br>GRE Subject Test 2 Score: <input type="text" name="sub2_score" ><br>GRE Subject Test 3 Subject: <input type="text" name="sub3_sub" ><br>GRE Subject Test 3 Score: <input type="text" name="sub3_score" ><br><br>Work Experience: <input type="text" name="experience"><br>Area of Interest (optional): <input type="text" name="interest"><br>Desired password for Future Login (required): <input type="text" name="password"><br><br><br>Recommender Name: <input type="text" name="writer"><br>Recommender Email: <input type="text" name="email_r"><br>Recommender Title: <input type="text" name="title"><br>Recommender Affiliation: <input type="text" name="affil"><br><input type="submit" name="submit3" value="submit"></form><?php } ?>